name: 🐍 Python CLI Checks

on:
  pull_request:
    branches: [main]
    paths:
      - 'cli/**.py'
      - 'InfraBox.py'
      - 'requirements.txt'
      - '.github/workflows/python-cli-checks.yml'

permissions:
  contents: read
  pull-requests: read

jobs:
  python-validation:
    name: 🧪 Python Linting & Security
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black bandit

      - name: 🎨 Code formatting check (black)
        run: black --check --diff InfraBox.py cli/

      - name: 🔍 Linting (flake8)
        run: flake8 InfraBox.py cli/

      - name: 🛡️ Security scan (bandit)
        run: bandit -r InfraBox.py cli/

  cli-smoke-tests:
    name: 🧪 CLI Smoke Tests
    runs-on: ubuntu-latest
    needs: python-validation

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: ⚙️ Run CLI help command
        run: |
          source .venv/bin/activate
          python InfraBox.py --help

      - name: 🧪 Dry-run example
        run: |
          source .venv/bin/activate
          python InfraBox.py create dev --dry-run

      - name: ❌ Invalid env test (should fail safely)
        run: |
          source .venv/bin/activate
          python InfraBox.py create ../../evil --dry-run || echo "Handled invalid input safely"
